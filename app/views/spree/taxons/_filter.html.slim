ruby:
  type ||= :filter # filter or sort
  filter_type = filter[:type] # format, variation, price etc
  filter_name = filter[:name].humanize # label
  items = filter[:options]
  params_option = params.dig(type, filter_type.downcase)
  input_name = "#{type}[#{filter_type.downcase}]"
  input_name += '[]' if type == :filter # array of params

.taxon-filter.flex-1
  .dropdown
    button.btn-block data-toggle='dropdown' aria-haspopup='true' aria-expanded='false' type='button'
      .flex.between.align-center
        div
          span.text-muted = t("filters.by.#{type}")
          br
          span.upcase.text-white = filter_name

        .caret-circle
          span.caret

    ul.dropdown-menu
      - items.each_with_index do |item, index|
        - filter_input_id = "#{type}_#{filter_type.downcase}_#{item[:id]}"

        li.dropdown-item
          div class=(type == :filter ? 'checkbox checkbox-blue checkbox-right' : 'radio radio-blue radio-right') class=('disabled' if item[:disabled])
            - if type == :filter
              = check_box_tag input_name, item[:value], params_option&.include?(item[:value]), id: filter_input_id, disabled: item[:disabled]
            - else
              = radio_button_tag input_name, item[:value], params_option == item[:value].to_s, id: filter_input_id, disabled: item[:disabled]

            = label_tag filter_input_id, item[:label], class: 'flex between align-center'
