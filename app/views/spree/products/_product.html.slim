ruby:
  url = spree.product_path(product, taxon_id: taxon.try(:id))
  card_size ||= 'col-lg-2 col-md-3 col-sm-6 col-xs-6'
  max_mobile ||= max_mobile
  index = local_assigns[:product_counter] || 0
  is_admin = spree_current_user&.admin?

div id="product_#{product.id}" class="#{card_size} product-list-item #{'hidden-xxs' if max_mobile && index >= max_mobile}" data-hook="products_list_item" itemscope=true itemtype="https://schema.org/Product"
  .panel.panel-default
    - cache(taxon.present? ? [I18n.locale, current_currency, taxon, product] : cache_key_for_product(product, admin: is_admin)) do
      .panel-body.text-center.product-body
        = link_to url, itemprop: "url" do
          = large_image(product, itemprop: "image")
          br
          = content_tag(:span, truncate(product.name, length: 50), class: 'info', itemprop: "name", title: product.name)

        br

        span itemprop="offers" itemscope=true itemtype="https://schema.org/Offer"
          span class="price selling lead" itemprop="price" content=(product.price_in(current_currency).amount.nil? ? 0 : product.price_in(current_currency).amount.to_d)
            = display_price(product)

          span itemprop="priceCurrency" content=current_currency

      - if is_admin
        .panel-footer
          a role="button" data-toggle="collapse" href="#admin-info-#{product.id}" Expand product info

          .collapse id="admin-info-#{product.id}"
            small
              strong> Boost factor:
              | #{product.boost_factor}
            br
            small
              strong> Format:
              | #{product.property(:format)}
            br
            small
              strong> PM Format:
              | #{PublicMarket::Variations::BookVariation::Properties.find_book_format(product.property(:format))}
            br
            small
              strong> Completed orders:
              | #{product.orders.complete.count}
            br
            small
              strong> Completed (30 days):
              | #{product.orders.complete.where('completed_at > ?', 1.month.ago).count}
