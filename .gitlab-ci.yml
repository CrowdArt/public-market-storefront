variables:
  DOCKER_DRIVER: overlay2 # use faster volume driver
  DOCKER_IMAGE: registry.gitlab.com/publicmarket/public-market-storefront

stages:
  - build
  - test

build:
  stage: build
  tags:
    - build
  image: docker:latest
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    # base image contains only dependencies
    - docker build -f ./config/deploy/dockerfiles/base/Dockerfile -t $DOCKER_IMAGE/base:latest .
    - docker push $DOCKER_IMAGE/base:latest
    # ci image inherits from base, installs chrome and copies code
    - docker build -f ./config/deploy/dockerfiles/ci/Dockerfile -t $DOCKER_IMAGE/ci:latest .
    - docker push $DOCKER_IMAGE/ci:latest
    # master image inherits from base and copies code
    # - docker build -f ./config/deploy/Dockerfile -t $DOCKER_IMAGE:latest .
    # - docker push $DOCKER_IMAGE:latest
    # cleanup
    - docker system prune -f

rspec:
  image: $DOCKER_IMAGE/ci:latest
  stage: test
  services:
    - postgres:10.1-alpine
    - elasticsearch:latest
  retry: 2
  cache:
    paths:
      - vendor/bundle
      - cc-test-reporter
  variables:
    POSTGRES_DB: storefront_test
    DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/$POSTGRES_DB"
    ELASTICSEARCH_URL: http://elasticsearch:9200
    RAILS_ENV: test
    DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL: 'true'
  before_script:
    # setup codeclimate test reporter
    - wget -nc -O ./cc-test-reporter https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 || true
    - chmod +x ./cc-test-reporter
    - ./cc-test-reporter before-build
    # setup rails test env
    - bundle check || bundle install --deployment --jobs 4 --without development staging production
    - bundle exec rake db:schema:load
  script:
    - bundle exec rspec
    - ./cc-test-reporter after-build --coverage-input-type simplecov --exit-code $?
  artifacts:
    when: always
    expire_in: 1 day
    paths:
      - coverage/
      - tmp/capybara/
